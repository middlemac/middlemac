



  <div id="instance_attr_details" class="attr_details">
    
      
      <span id="config[:build_dir]=-instance_method"></span>
      <div class="method_details first">
  <h3 class="signature first" id="config[:build_dir]=-instance_method">
  
    #<strong>config[:build_dir]=</strong>(value)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
  <div class="note notetag">
    <strong>Note:</strong>
    <div class='inline'><p>This is a Middleman application level config option.</p>
</div>
  </div>

<p>Indicates where <strong>Middleman</strong> will put build output. This standard config
value will be treated as a <em>prefix</em>; for example if the current target is
<code>:pro</code> and this value is set to its default <code>build</code>, then the actual build
directory will be <code>build (pro)/</code>.</p>

<p>If the <code>build_dir</code> key is present for any of the <code>config[:targets]</code>, they
will override this setting.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Indicate the build directory prefix that should be
used for build output.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
    
      
      <span id="config[:target]=-instance_method"></span>
      <div class="method_details ">
  <h3 class="signature " id="config[:target]=-instance_method">
  
    #<strong>config[:target]=</strong>(value)  &#x21d2; <tt>Symbol</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
  <div class="note notetag">
    <strong>Note:</strong>
    <div class='inline'><p>This is a Middleman application level config option.</p>
</div>
  </div>

<p>Indicates the current target that is being built or served. When
set in <code>config.rb</code> it indicates the default target if one is not
specified on the command line.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Symbol</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>The target from <code>config[:targets]</code> that should
be used as the default.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
    
      
      <span id="config[:target_magic_images]=-instance_method"></span>
      <div class="method_details ">
  <h3 class="signature " id="config[:target_magic_images]=-instance_method">
  
    #<strong>config[:target_magic_images]=</strong>(value)  &#x21d2; <tt>Boolean</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
  <div class="note notetag">
    <strong>Note:</strong>
    <div class='inline'><p>This is a Middleman application level config option.</p>
</div>
  </div>

<p>This option is used to enable or disable the target magic images feature.
If itâ€™s <code>true</code> then the <code>image_tag</code> helper will attempt to substitute
target-specific images instead of the specified image, if the specified
image begins with <code>:target_magic_word</code>.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Boolean</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Specify whether or not automatic target-specific
image substitution should be enabled.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
    
      
      <span id="config[:target_magic_word]=-instance_method"></span>
      <div class="method_details ">
  <h3 class="signature " id="config[:target_magic_word]=-instance_method">
  
    #<strong>config[:target_magic_word]=</strong>(value)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
  <div class="note notetag">
    <strong>Note:</strong>
    <div class='inline'><p>This is a Middleman application level config option.</p>
</div>
  </div>

<p>Indicates the magic image prefix for image substitution with the
<code>image_tag</code> helper when <code>:target_magic_images</code> is enabled. For example
if you specify <code>all-image.png</code> and <code>pro-image.png</code> exists, then the
latter will be used by the helper instead of the former.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Indicate the prefix that should indicate an image
that should be substituted, such as <code>all</code>.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
    
      
      <span id="config[:targets]=-instance_method"></span>
      <div class="method_details ">
  <h3 class="signature " id="config[:targets]=-instance_method">
  
    #<strong>config[:targets]=</strong>(value)  &#x21d2; <tt>Hash</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
  <div class="note notetag">
    <strong>Note:</strong>
    <div class='inline'><p>This is a Middleman application level config option.</p>
</div>
  </div>

<p>A hash that defines all of the characteristics of your individual targets.
The <code>build_dir</code> and <code>features</code> keys in a target have special meanings;
other keys can be added arbitrarily and helpers can fetch these for you.
A best practice is to assign the same features to <em>all</em> of your targets and
toggle them <code>on</code> or <code>off</code> on a target-specific basis.</p>


  </div>
</div>
<div class="tags">
  
  <div class="examples">
    <p class="tag_title">Examples:</p>
    
      
        <p class="example_title"><div class='inline'><p>You might define this in your <code>config.rb</code> like this:</p>
</div></p>
      
      <pre class="example code"><code><span class='id identifier rubyid_config'>config</span><span class='lbracket'>[</span><span class='symbol'>:targets</span><span class='rbracket'>]</span> <span class='op'>=</span> <span class='lbrace'>{</span>
  <span class='symbol'>:free</span> <span class='op'>=&gt;</span>
      <span class='lbrace'>{</span>
          <span class='symbol'>:sample_key</span> <span class='op'>=&gt;</span> <span class='tstring'><span class='tstring_beg'>&#39;</span><span class='tstring_content'>People who use free versions don\&#39;t drive profits.</span><span class='tstring_end'>&#39;</span></span><span class='comma'>,</span>
          <span class='symbol'>:build_dir</span>  <span class='op'>=&gt;</span> <span class='tstring'><span class='tstring_beg'>&#39;</span><span class='tstring_content'>build (%s)</span><span class='tstring_end'>&#39;</span></span><span class='comma'>,</span>
          <span class='symbol'>:features</span>   <span class='op'>=&gt;</span>
              <span class='lbrace'>{</span>
                  <span class='symbol'>:feature_advertise_pro</span> <span class='op'>=&gt;</span> <span class='kw'>true</span><span class='comma'>,</span>
                  <span class='symbol'>:insults_user</span>          <span class='op'>=&gt;</span> <span class='kw'>true</span><span class='comma'>,</span>
                  <span class='symbol'>:grants_wishes</span>         <span class='op'>=&gt;</span> <span class='kw'>false</span><span class='comma'>,</span>
              <span class='rbrace'>}</span>
      <span class='rbrace'>}</span><span class='comma'>,</span>

      <span class='symbol'>:pro</span> <span class='op'>=&gt;</span>
      <span class='lbrace'>{</span>
          <span class='symbol'>:sample_key</span> <span class='op'>=&gt;</span> <span class='tstring'><span class='tstring_beg'>&#39;</span><span class='tstring_content'>You are a valued contributor to our balance sheet!</span><span class='tstring_end'>&#39;</span></span><span class='comma'>,</span>
          <span class='symbol'>:features</span> <span class='op'>=&gt;</span>
              <span class='lbrace'>{</span>
                  <span class='symbol'>:feature_advertise_pro</span> <span class='op'>=&gt;</span> <span class='kw'>false</span><span class='comma'>,</span>
                  <span class='symbol'>:insults_user</span>          <span class='op'>=&gt;</span> <span class='kw'>false</span><span class='comma'>,</span>
                  <span class='symbol'>:grants_wishes</span>         <span class='op'>=&gt;</span> <span class='kw'>true</span><span class='comma'>,</span>
              <span class='rbrace'>}</span>
      <span class='rbrace'>}</span><span class='comma'>,</span>
  <span class='rbrace'>}</span></code></pre>
    
  </div>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Hash</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>The complete definition of your targets, their
features, and other keys-value pairs that you wish to include.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
    
  </div>



