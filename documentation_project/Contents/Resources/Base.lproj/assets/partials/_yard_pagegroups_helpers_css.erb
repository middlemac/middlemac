




  <div class="method_details_list">
    
    
      
        <div class="method_details first">
  <h3 class="signature first" id="nav_breadcrumbs_alt_class-instance_method">
  
    - (<tt>String</tt>) <strong>nav_breadcrumbs_alt_class</strong> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Returns the value of the the extension option
<code>options[:nav_breadcrumbs_alt_class]</code>.</p>

<p>Both the built-in helpers and the partials (if you
install them) use these helpers in order to access the
configuration values. When writing your own partials
it is generally unnecessary to use these helpers; you
can simply assign your own class name.</p>

<p>The provided helpers and partials use CSS classes, and
if the class names collide with your own class names
or fail to meet with your naming standards, then they
can be changed using the extension options.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the name of the class.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
      
        <div class="method_details ">
  <h3 class="signature " id="nav_breadcrumbs_alt_label-instance_method">
  
    - (<tt>String</tt>) <strong>nav_breadcrumbs_alt_label</strong> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Returns the value of the the extension option
<code>options[:nav_breadcrumbs_alt_label]</code>.</p>

<p>Both the built-in helpers and the partials (if you
install them) use these helpers in order to access the
configuration values. When writing your own partials
it is generally unnecessary to use these helpers; you
can simply assign your own class name.</p>

<p>The provided helpers and partials use CSS classes, and
if the class names collide with your own class names
or fail to meet with your naming standards, then they
can be changed using the extension options.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the name of the class.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
      
        <div class="method_details ">
  <h3 class="signature " id="nav_breadcrumbs_class-instance_method">
  
    - (<tt>String</tt>) <strong>nav_breadcrumbs_class</strong> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Returns the value of the the extension option
<code>options[:nav_breadcrumbs_class]</code>.</p>

<p>Both the built-in helpers and the partials (if you
install them) use these helpers in order to access the
configuration values. When writing your own partials
it is generally unnecessary to use these helpers; you
can simply assign your own class name.</p>

<p>The provided helpers and partials use CSS classes, and
if the class names collide with your own class names
or fail to meet with your naming standards, then they
can be changed using the extension options.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the name of the class.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
      
        <div class="method_details ">
  <h3 class="signature " id="nav_brethren_class-instance_method">
  
    - (<tt>String</tt>) <strong>nav_brethren_class</strong> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Returns the value of the the extension option
<code>options[:nav_brethren_class]</code>.</p>

<p>Both the built-in helpers and the partials (if you
install them) use these helpers in order to access the
configuration values. When writing your own partials
it is generally unnecessary to use these helpers; you
can simply assign your own class name.</p>

<p>The provided helpers and partials use CSS classes, and
if the class names collide with your own class names
or fail to meet with your naming standards, then they
can be changed using the extension options.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the name of the class.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
      
        <div class="method_details ">
  <h3 class="signature " id="nav_brethren_index_class-instance_method">
  
    - (<tt>String</tt>) <strong>nav_brethren_index_class</strong> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Returns the value of the the extension option
<code>options[:nav_brethren_index_class]</code>.</p>

<p>Both the built-in helpers and the partials (if you
install them) use these helpers in order to access the
configuration values. When writing your own partials
it is generally unnecessary to use these helpers; you
can simply assign your own class name.</p>

<p>The provided helpers and partials use CSS classes, and
if the class names collide with your own class names
or fail to meet with your naming standards, then they
can be changed using the extension options.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the name of the class.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
      
        <div class="method_details ">
  <h3 class="signature " id="nav_legitimate_children_class-instance_method">
  
    - (<tt>String</tt>) <strong>nav_legitimate_children_class</strong> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Returns the value of the the extension option
<code>options[:nav_legitimate_children_class]</code>.</p>

<p>Both the built-in helpers and the partials (if you
install them) use these helpers in order to access the
configuration values. When writing your own partials
it is generally unnecessary to use these helpers; you
can simply assign your own class name.</p>

<p>The provided helpers and partials use CSS classes, and
if the class names collide with your own class names
or fail to meet with your naming standards, then they
can be changed using the extension options.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the name of the class.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
      
        <div class="method_details ">
  <h3 class="signature " id="nav_prev_next_class-instance_method">
  
    - (<tt>String</tt>) <strong>nav_prev_next_class</strong> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Returns the value of the the extension option
<code>options[:nav_prev_next_class]</code>.</p>

<p>Both the built-in helpers and the partials (if you
install them) use these helpers in order to access the
configuration values. When writing your own partials
it is generally unnecessary to use these helpers; you
can simply assign your own class name.</p>

<p>The provided helpers and partials use CSS classes, and
if the class names collide with your own class names
or fail to meet with your naming standards, then they
can be changed using the extension options.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the name of the class.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
      
        <div class="method_details ">
  <h3 class="signature " id="nav_prev_next_label_next-instance_method">
  
    - (<tt>String</tt>) <strong>nav_prev_next_label_next</strong> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Returns the value of the the extension option
<code>options[:nav_prev_next_label_next]</code>.</p>

<p>Both the built-in helpers and the partials (if you
install them) use these helpers in order to access the
configuration values. When writing your own partials
it is generally unnecessary to use these helpers; you
can simply assign your own class name.</p>

<p>The provided helpers and partials use CSS classes, and
if the class names collide with your own class names
or fail to meet with your naming standards, then they
can be changed using the extension options.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the name of the class.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
      
        <div class="method_details ">
  <h3 class="signature " id="nav_prev_next_label_prev-instance_method">
  
    - (<tt>String</tt>) <strong>nav_prev_next_label_prev</strong> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Returns the value of the the extension option
<code>options[:nav_prev_next_label_prev]</code>.</p>

<p>Both the built-in helpers and the partials (if you
install them) use these helpers in order to access the
configuration values. When writing your own partials
it is generally unnecessary to use these helpers; you
can simply assign your own class name.</p>

<p>The provided helpers and partials use CSS classes, and
if the class names collide with your own class names
or fail to meet with your naming standards, then they
can be changed using the extension options.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the name of the class.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
      
        <div class="method_details ">
  <h3 class="signature " id="nav_toc_index_class-instance_method">
  
    - (<tt>String</tt>) <strong>nav_toc_index_class</strong> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Returns the value of the the extension option
<code>options[:nav_toc_index_class]</code>.</p>

<p>Both the built-in helpers and the partials (if you
install them) use these helpers in order to access the
configuration values. When writing your own partials
it is generally unnecessary to use these helpers; you
can simply assign your own class name.</p>

<p>The provided helpers and partials use CSS classes, and
if the class names collide with your own class names
or fail to meet with your naming standards, then they
can be changed using the extension options.</p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the name of the class.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
      
    
  </div>


