



  <div id="instance_attr_details" class="attr_details">
    
      
      <span id="options[:Breadcrumbs]=-instance_method"></span>
      <div class="method_details first">
  <h3 class="signature first" id="options[:Breadcrumbs]=-instance_method">
  
    - (<tt>String</tt>) <strong>options[:Breadcrumbs]=</strong>(value) 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Indicates the name of the breadcrumbs helper to use for breadcrumbs.
Built-in breadcrumbs are “nav_breadcrumbs” and “nav_breadcrumbs_alt”.
Change to <code>nil</code> to disable breadcrumbs completely. Breadcrumbs helpers are
part of the <code>middleman-pagegroups</code> extension (which is a component of this
extension).</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>value</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>The name of the breadcrumbs helper to use.</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the current value of this option.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
    
      
      <span id="options[:Help_Output_Location]=-instance_method"></span>
      <div class="method_details ">
  <h3 class="signature " id="options[:Help_Output_Location]=-instance_method">
  
    - (<tt>String</tt>) <strong>options[:Help_Output_Location]=</strong>(value) 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Specifies the directory where the finished <code>.help</code> bundle should go. It
must be relative to your <code>config.rb</code> file, or set it to <code>nil</code> to leave the
output in the default location (in the help project directory). The <em>actual</em>
output directory will be an Apple Help bundle at this location named in the
form <code>#{CFBundleName} (target).help</code>. By targeting the <code>Resources</code> directory
of your XCode project with this option, it’s possible to ensure that an
Xcode project is automatically up to date every time a help project is
built.</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>value</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>The directory where the final help bundle will be
built.</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the current value of this option.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
    
      
      <span id="options[:partials_dir]=-instance_method"></span>
      <div class="method_details ">
  <h3 class="signature " id="options[:partials_dir]=-instance_method">
  
    - (<tt>String</tt>) <strong>options[:partials_dir]=</strong>(value) 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    <p>Specifies the default location for partials. Prior to <strong>Middleman</strong> 4.0,
all partials were kept in a common directory. <strong>Middlemac</strong> restores this
previous behavior by allowing all partials to be grouped in a common
directory. When using the <code>partial</code> helper, this directory will be checked
first for the existence of a partial; if not found then the default, built
in behavior will take over.</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>value</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>The directory to search for partials.</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><p>Returns the current value of this option.</p>
</div>
      
    </li>
  
</ul>

</div>
</div>
    
  </div>



