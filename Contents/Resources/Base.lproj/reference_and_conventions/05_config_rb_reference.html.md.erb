---
title:  config.rb reference
blurb:  Explore the <code>config.rb</code> file in a little more detail than
        presented in the overview.
layout: template-logo-medium
---
<%= partial 'markdown-links' %>
<%= partial 'markdown-images' %>


<%= current_page.data.title %>
==============================

<%= current_page.data.blurb %>


The `config.rb` file is very well commented, but some additional points for
discussion are right here.

`options.Target = (ENV['HBTARGET'] || :pro).to_sym`
  : In general you should use `middlemac` in the terminal instead of using
    `middleman` or `bundle exec` directly. However if you choose to use them,
    then know that you must specify a target with the HBTARGET environment
    variable, or use the default target specified by this setting. The default,
    `:pro` in this example, can be built using `middleman build` or
    `bundle exec middleman build` without specifying an environment variable.
    Or, as recommended, simply use `middlemac` instead.
    
`options.CFBundleName = 'Middlemac'`
  : The `CFBundleName` is one of the pieces of data that link your Mac OS X
    application to its help file. It is intended to be the same for all of your
    help targets. _Middlemac_ will use this value to configure the help system
    for your targets automatically.
    
`options.Help_Output_Location = nil`
  : When you build your targets, they will be placed into the directory
    specified by this setting. The default, `nil`, will put builds into your
    project directory.
    
    We recommend that you set the output location to the location that XCode
    expects to find your `.help` bundles, so that whenever you build your
    XCode targets the latest-built help will always be included.
    {:.note}

`Targets`
  : The `Targets` hash contains all of the settings for each of your build
    targets. The _Middlemac_ documentation consists of a `free` and a `pro`
    target for demonstration purposes. Most of the fields are self-explanatory,
    but there’s some mention of `CFBundleID` and `Features` below.
    
`CFBundleID`
  : Each help target must have a unique `CFBundleID` that matches a unique
    `CFBundleHelpBookName` in your applications’ `Info.plist` files. This
    pairing is the mechanism by which Mac OS X knows which help bundle belongs
    to which application. If they are not unique, Mac OS X _will_ become
    confused, and your end-users, if they have multiple versions of your product
    installed, will not be very satisfied.
    
`ProductName` and `ProductURI`
  : The default templates use these in a prominent way, and they’re also
    available to you using [_Middlemac_’s helpers][02_middlemac_helpers].
 
`Features`
  : Aside from **targets** the use of **features** can give you fine-grained
    control over what content appears in each target. It’s considered a 
    best-practice to include all of the same features in the hash for each
    target, and specify a boolean (true/false) value for each key, as
    appropriate for your target. _Middlemac_ documentation has four features
    defined, and you can [look at examples here][08_features_overview].
  
