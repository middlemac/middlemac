---
title:  Middlemac workflow
blurb:  Following our recommended workflow is key to getting the 
        most out of <em>Middlemac</em>, as this is what makes it easy to build
        Apple Helpbooks compared to traditional methods.
layout: template-logo-medium
order: 1
---
<%= partial 'markdown-links' %>
<%= partial 'markdown-images' %>


<%= current_page.data.title %>
==============================

<%= current_page.data.blurb %>


Setup your help project
-----------------------

All of the setup required takes place in a single section of a single Ruby
script. Don’t worry! You don’t have to know Ruby. If you’re a software developer
already it will be painless for you to configure _Middlemac_ to your
applications’ exact specifications.

You will find that most of _Middlemac_’s ease-of-use comes from the conventions
you will follow.


Develop your help structure
---------------------------

Following _Middlemac_’s conventions you will make [groups][09_groups_overview],
use [tables of contents][08_partials_reference], and implement
[navigation][06_frontmatter_keys] with very little effort. Simply put some types
of files where _Middlemac_ expects to find them and the build system will take
care of the rest.


Develop your help content
-------------------------

All you have to do is write some HTML, or better yet,
[Markdown](http://kramdown.gettalong.org/).


Build your Helpbook
-------------------

From your help project directory, a single
[Terminal command][04_middlemac_cli_reference] can build one, more, or all of
your targets, with as much or little on-screen feedback as you want. In a matter
of seconds to minutes (based on your project size), _Middlemac_ will build your
targets anywhere you’ve indicated in `config.rb`.
 
If you target your application’s XCode project directory (and have already
configured XCode to use your `.help` bundle, then all that’s left is to…


Build your application
----------------------

And then run it. And start your help. It’s that easy.
