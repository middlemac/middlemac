---
title:  Middlemac Features
blurb:  Discover more about <em>Middlemac</em>’s features.
layout: template-logo-small
order:  1
---
<%= partial 'markdown-links' %>
<%= partial 'markdown-images' %>


<%= current_page.data.title %>
==============================

_Middlemac_ makes it simple to do this in Terminal…

`./middlemac target1 target2 target3`

…and end up with versions of your helpbooks with all of the Apple-required files
in the Apple-required formats in the correct locations of your XCode build
directory. Simply build your help target, run your application, and find that
it just works!

At its simplest _Middlemac_ offers:

- Write your help files with plain text using the
  [Markdown](http://kramdown.gettalong.org/) format (if you are reading this
  file in a text editor, this is an example of Markdown).
- Single or multiple build [targets][07_targets_overview], e.g., your `pro`
  target can include content specific to the professional version of your
  application.
- [Features][08_features_overview] support for each build target, e.g. each of 
  your build targets can specify whether or not they support specific features,
  and this content will be included or excluded as your needs require.
- A low learning curve if you’re a developer.
- A set of conventions and tools that make automatic tables of contents,
  automatic sections, and automatic behavior effortless to implement.
- [Partials][08_partials_reference], [helpers][09_helpers_reference_index],
  and [built-in methods][03_middlemac_extended_methods] that make your static 
  help documents appear more dynamic while
  [keeping yourself DRY](http://en.wikipedia.org/wiki/Don't_repeat_yourself).
- A basic, Apple-like CSS stylesheet and set of templates that can be used as-is
  or easily tweaked to suit your needs.
